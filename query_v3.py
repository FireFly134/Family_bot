# coding=UTF-8
#
#
import pandas as pd
import logging
import pickle
import telegram

from apiclient import discovery
from work import TELEGRAM_TOKEN, ivea_family, papa, mama, kids, data_kids, working_folder
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from sqlalchemy import create_engine
from datetime import datetime
from threading import Thread
from time import sleep
from free_time import tomorrow

logging.basicConfig(filename=working_folder + 'log/query_test_'+ datetime.now().strftime('%d.%m.%Y') +'.log',
                    filemode='a',
                    level=logging.INFO,
                    format='%(asctime)s %(levelname)s: %(message)s',
                    datefmt='%H:%M:%S')

bot = telegram.Bot(TELEGRAM_TOKEN) # –ö–æ–Ω–Ω–µ–∫—Ç –ø–æ —Ç–æ–∫–µ–Ω—É

engine = create_engine(ivea_family)  # –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–µ–¥–∏–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º

time_begin_and_end = {}

def begin(name,zan):# begin new day, new query
    info = pd.read_sql(f"SELECT user_id FROM user_family WHERE name ='{name}'", engine)
    keyboard = [[InlineKeyboardButton('–î–∞', callback_data='YES-' + str(name)),
                 InlineKeyboardButton('–ù–µ—Ç', callback_data='NO-' + str(name))]]
    if time < "12:00:00":
        text = f'–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ!!! üòä –†–æ–¥–∏—Ç–µ–ª—è–º –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å, —á—Ç–æ —É —Ç–µ–±—è –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ. –¢—ã —É—Å–ø–µ–≤–∞–µ—à—å –Ω–∞ {zan}?'
    else:
        text = f'–ü—Ä–∏–≤–µ—Ç! üòä –†–æ–¥–∏—Ç–µ–ª—è–º –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å, —á—Ç–æ —É —Ç–µ–±—è –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ. –¢—ã —É—Å–ø–µ–≤–∞–µ—à—å –Ω–∞ {zan}?'
    logging.info(f'{name}: –ü—Ä–∏–≤–µ—Ç! –†–æ–¥–∏—Ç–µ–ª—è–º –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å, —á—Ç–æ —É —Ç–µ–±—è –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ. –¢—ã —É—Å–ø–µ–≤–∞–µ—à—å –Ω–∞ {zan}?')
    bot.send_message(chat_id=int(info.loc[0, "user_id"]), text=text, reply_markup=InlineKeyboardMarkup(keyboard))
    engine.execute(f"UPDATE user_family SET answer = 0, comment = 'None' WHERE name ='{name}'")

def start(name):  # —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ 10 –º–∏–Ω –Ω–∞–∑–∞–¥ –±—ã–ª –æ–ø—Ä–æ—Å, –Ω–∞–¥–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç –∏ –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—è–º
    if name == "–í–æ–≤–∞":
        go = "–ø–æ—à–µ–ª"
        answer = "–æ—Ç–≤–µ—Ç–∏–ª"
    else:
        go = "–ø–æ—à–ª–∞"
        answer = "–æ—Ç–≤–µ—Ç–∏–ª–∞"
    info = pd.read_sql(f"SELECT answer, comment FROM user_family WHERE name ='{name}'", engine)
    if int(info.loc[0, "answer"]) == 0:
        text = f"{name} –Ω–µ {answer} –Ω–∞ –≤–æ–ø—Ä–æ—Å: \"–¢—ã —É—Å–ø–µ–≤–∞–µ—à—å –Ω–∞ –∑–∞–Ω—è—Ç–∏—è?\""
    elif int(info.loc[0, "answer"]) == 1:  # –ï—Å–ª–∏ 1, —Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ —Ä–µ–±–µ–Ω–æ–∫ –æ—Ç–≤–µ—Ç–∏–ª.
        bot.send_message(chat_id=943180118, text=f"{name} –Ω–∞ –≤–æ–ø—Ä–æ—Å: \"–¢—ã —É—Å–ø–µ–≤–∞–µ—à—å –Ω–∞ –∑–∞–Ω—è—Ç–∏—è?\", {answer} \"–î–∞\"")
        logging.info(f"{name} –Ω–∞ –≤–æ–ø—Ä–æ—Å: \"–¢—ã —É—Å–ø–µ–≤–∞–µ—à—å –Ω–∞ –∑–∞–Ω—è—Ç–∏—è?\", {answer} \"–î–∞\"")
    elif int(info.loc[0, "answer"]) == 2:  # –†–µ–∂–∏–º –ØÃÅ–±–µ–¥—ã-–ö–æ—Ä—èÃÅ–±–µ–¥—ã
        if info.loc[0, "comment"] != 'None' and info.loc[0, "comment"] is not None:
            text = f"{name} –Ω–µ {go} –Ω–∞ –∑–∞–Ω—è—Ç–∏—è. –ù–∞ –≤–æ–ø—Ä–æ—Å –ø–æ—á–µ–º—É, {answer}: \"{info.loc[0, 'comment']}\""
        else:
            text = f"{name} –Ω–µ {go} –Ω–∞ –∑–∞–Ω—è—Ç–∏—è. –ù–∞ –≤–æ–ø—Ä–æ—Å –ø–æ—á–µ–º—É, –æ—Ç–≤–µ—Ç–∞ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–æ."

    if text != '':
        logging.info(text)
        bot.send_message(chat_id=943180118, text=text)
        bot.send_message(chat_id=papa, text=text)
        bot.send_message(chat_id=mama, text=text)

def end(name,key):
    if name == "–í–æ–≤–∞":
        go = "–ø–æ—à–µ–ª"
        answer = "–æ—Ç–≤–µ—Ç–∏–ª"
    else:
        go = "–ø–æ—à–ª–∞"
        answer = "–æ—Ç–≤–µ—Ç–∏–ª–∞"
        ########    –í—Ä–µ–º—è –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π, –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø—Ä–æ—Å–∞ —Å–µ–±–µ–Ω–∫–∞    ########
    info = pd.read_sql(f"SELECT answer, comment, user_id FROM user_family WHERE name ='{name}'", engine)
    if key == 0:
        logging.info(f'{name}: –ù–ê–ß–ê–õ–û.... –î–∞–π –∏–º –∑–Ω–∞—Ç—å –∫–æ–≥–¥–∞ –±—É–¥–µ—à—å –¥–æ–º–∞.')
        keyboard = [[InlineKeyboardButton('–Ø —É–∂–µ –¥–æ–º–∞.', callback_data='home-' + str(name))],
                    [InlineKeyboardButton('–Ø –Ω–µ –ø–ª–∞–Ω–∏—Ä—É—é –ø–æ–∫–∞ –∏–¥—Ç–∏ –¥–æ–º–æ–π.', callback_data='NO-' + str(name))]]
        bot.send_message(chat_id=int(info.loc[0, "user_id"]),
                         text='–†–æ–¥–∏—Ç–µ–ª–∏ –±–µ—Å–ø–æ–∫–æ—é—Ç—Å—è –∑–∞ —Ç–µ–±—è. –î–∞–π –∏–º –∑–Ω–∞—Ç—å –∫–æ–≥–¥–∞ —Ç—ã —É–∂–µ –±—É–¥–µ—à—å –¥–æ–º–∞. üòä',
                         reply_markup=InlineKeyboardMarkup(keyboard))
        engine.execute(f"UPDATE user_family SET answer = 0, comment = 'None' WHERE name ='{name}'")
        logging.info(f'{name}:–†–æ–¥–∏—Ç–µ–ª–∏ –±–µ—Å–ø–æ–∫–æ—é—Ç—Å—è –∑–∞ —Ç–µ–±—è. –î–∞–π –∏–º –∑–Ω–∞—Ç—å –∫–æ–≥–¥–∞ –±—É–¥–µ—à—å –¥–æ–º–∞. end (key == 0)')
    ########    –í—Ä–µ–º—è –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π, –∫–∞–∂–¥—ã–π —á–∞—Å —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –µ—Å–ª–∏ —Ä–µ–±–µ–Ω–æ–∫ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª    ########

    elif key == 1:
        if info.loc[0, "answer"] == 0:
            text = f"{name} –Ω–µ {answer} –Ω–∞ –≤–æ–ø—Ä–æ—Å: \"–¢—ã –¥–æ–º–∞?\""
        elif info.loc[0, "answer"] == 2:  # –†–µ–∂–∏–º –ØÃÅ–±–µ–¥—ã-–ö–æ—Ä—èÃÅ–±–µ–¥—ã
            if info.loc[0, "comment"] != 'None' and info.loc[0, "comment"] is not None:
                text = f"{name} –Ω–µ {go} –¥–æ–º–æ–π. –ù–∞ –≤–æ–ø—Ä–æ—Å –ø–æ—á–µ–º—É, {answer}: \"{info.loc[0, 'comment']}\""
            else:
                text = f"{name} –Ω–µ {go} –¥–æ–º–æ–π. –ù–∞ –≤–æ–ø—Ä–æ—Å –ø–æ—á–µ–º—É, –æ—Ç–≤–µ—Ç–∞ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–æ."
        if info.loc[0, "answer"] != 1:
            logging.info(str(text)+"  end (key == 1)")
            bot.send_message(chat_id=papa, text=text)
            bot.send_message(chat_id=mama, text=text)
        else:
            text = "info.loc[0, \"answer\"] = 1: key = 1 (–æ—Ç–≤–µ—Ç –¥–∞)"
            logging.info(str(text))

def collect_info(name):
    credentials = pickle.load(open(f"{working_folder}calendar_tokens/token_{data_kids[name]}.pkl", "rb"))
    service = discovery.build("calendar", "v3", credentials=credentials)
    result = service.calendarList().list().execute()
    calendar_id = result['items'][0]['id']
    result = service.events().list(calendarId=calendar_id, timeZone="Europe/Moscow", singleEvents=True, orderBy="startTime", timeMin=datetime.now().strftime("%Y-%m-%dT00:00:00+03:00"), timeMax=datetime.now().strftime("%Y-%m-%dT23:59:59+03:00")).execute()
    nowDate = datetime.now().strftime("%Y-%m-%d")
    start = []
    end = []
    begin = 'None'
    zan = 'None'
    if result['items'] == []:
        bot.send_message(chat_id=943180118,text = name + ": –í —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å")
        logging.info(name + ": –í —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å")
        if name in time_begin_and_end:
            time_begin_and_end.pop(name)
    else:
        for i in range(len(result['items'])):
            if "start" in result['items'][i] and 'summary' in result['items'][i]:
                date_start = str(result['items'][i]['start']['dateTime'])
                date_end = str(result['items'][i]['end']['dateTime'])
                if date_start.split("T")[0] == nowDate:  # —Å–≤–µ—Ä—è–µ–º –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏–π –∏ –≤—ã–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è.
                    if date_start[:19].split("T")[1] >= "07:00:00":
                        start += [[date_start[:19].split("T")[1], i]]
                        end += [[date_end[:19].split("T")[1], i]]
            if start != []:
                begin = str(datetime.strptime(min(start)[0], "%H:%M:%S") - datetime.strptime("00:10:00", "%H:%M:%S"))  # +10 –º–∏–Ω—É—Ç
                if int(begin.split(':')[0]) < 10:
                    begin = "0" + begin
                zan = str(result['items'][min(start)[1]]['summary'])
                if zan[len(zan) - 1:] == "–∞":
                    zan = zan[:len(zan) - 1] + "—É"
                elif zan[len(zan) - 1:] == "—è":
                    zan = zan[:len(zan) - 1] + "—é"
                # –µ—Å–ª–∏ –≤ –∫–æ–Ω—Ü–µ "–∞" –º–µ–Ω—è–µ–º –Ω–∞ "—É", –µ—Å–ª–∏ "—è" —Ç–æ –Ω–∞ "—é"
    time_begin_and_end[name] = {
        'start': min(start),
        'end': max(end),
        'begin': begin,
        'zan': zan
    }
    #bot.send_message(chat_id=943180118,text = name + ": "+str(time_begin_and_end[name]))
    logging.info(name + ": "+str(time_begin_and_end[name]))

def nine_pm(name):
    info = pd.read_sql(f"SELECT mark, antimark, every_day, anti_every_day, sum_day_null, user_id FROM user_family WHERE name ='{name}'", engine)
    dislike_day = int(info.loc[0, "anti_every_day"])  # –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    like_day = int(info.loc[0, "every_day"])  # –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    ########    DSILIKE    ########
    if dislike_day != 0: #—Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Ä–∞–≤–Ω–∞ –Ω—É–ª—é, —Ç–æ –ø–æ—à–ª–∞ –∂–∞—Ä–∞
        if dislike_day > 20:
            dislike_day = int(str(dislike_day)[len(str(dislike_day)) - 1:])
        if dislike_day == 0 or (dislike_day >= 5 and dislike_day <= 20):
            dislike = "–¥–∏–∑–ª–∞–π–∫–æ–≤"
        elif dislike_day >= 2 and dislike_day <= 4:
            dislike = "–¥–∏–∑–ª–∞–π–∫–∞"
        elif dislike_day == 1:
            dislike = "–¥–∏–∑–ª–∞–π–∫"

        logging.info(f"{str(name)} üëé–ü–æ–ª—É—á–∞–π –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π {str(info.loc[0, 'anti_every_day'])} {str(dislike)}!üëé")# –¥–ª—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –ø–∏—à–∏–º –≤ –ª–æ–≥ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏...
        #bot.send_message(chat_id=943180118, text=f"{str(name)} üëé–ü–æ–ª—É—á–∞–π –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π {str(info.loc[0, 'anti_every_day'])} {str(dislike)}!üëé")# –¥–ª—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –ø–∏—à–∏–º –≤ –ª–æ–≥ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏...
        bot.send_message(chat_id=int(info.loc[0, "user_id"]),text=f"üëé–ü–æ–ª—É—á–∞–π –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π {str(info.loc[0, 'anti_every_day'])} {dislike}!üëé")
        engine.execute(f"UPDATE user_family SET anti_every_day = 0 WHERE name ='{str(name)}'")#–æ–±–Ω—É–ª—è–µ–º –≤ –ë–î –∑–Ω–∞—á–µ–Ω–∏—è
    ########    DISLIKE    ########
    ########    LIKE    ########
    if like_day != 0:# —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Ä–∞–≤–Ω–∞ –Ω—É–ª—é, —Ç–æ –∑–Ω–∞—á–∏—Ç –Ω–∞–¥–æ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–± —ç—Ç–æ–º —Ä–µ–±–µ–Ω–∫—É
        if like_day > 20:
            like_day = int(str(like_day)[len(str(like_day)) - 1:])
        if like_day == 0 or (like_day >= 5 and like_day <= 20):
            like = "–ª–∞–π–∫–æ–≤"
        elif like_day >= 2 and like_day <= 4:
            like = "–ª–∞–π–∫–∞"
        elif like_day == 1:
            like = "–ª–∞–π–∫"

        logging.info(f"{str(name)} üëç–ü–æ–ª—É—á–∞–π –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π {str(info.loc[0, 'every_day'])} {like}!üëç")# –¥–ª—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –ø–∏—à–∏–º –≤ –ª–æ–≥ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏...
        #bot.send_message(chat_id=943180118, text=f"{str(name)} üëç–ü–æ–ª—É—á–∞–π –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π {str(info.loc[0, 'every_day'])} {like}!üëç")# –¥–ª—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –ø–∏—à–∏–º –≤ –ª–æ–≥ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏...
        bot.send_message(chat_id=int(info.loc[0, "user_id"]),text=f"üëç–ü–æ–ª—É—á–∞–π –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π {str(info.loc[0, 'every_day'])} {like}!üëç")
        engine.execute(f"UPDATE user_family SET sum_day_null = 0, every_day = 0 WHERE name ='{name}'")#–æ–±–Ω—É–ª—è–µ–º –≤ –ë–î –∑–Ω–∞—á–µ–Ω–∏—è

    elif like_day == 0 and int(info.loc[0, "sum_day_null"]) == 3:# –ï—Å–ª–∏ –ª–∞–π–∫–æ–≤ –∑–∞ –¥–µ–Ω—å 0 –∏ –Ω–∞ —Å—á–µ—Ç—á–∏–∫–µ 3–¥–Ω–µ–π = 3, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–º—Å —Ä–µ–±–µ–Ω–∫—É
        logging.info(f"{str(name)} –õ–∞–π–∫–æ–≤ –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π –Ω–µ—Ç‚òπÔ∏è. –ó–∞–≤—Ç—Ä–∞ –ø–æ—Å—Ç–∞—Ä–∞–π—Å—è –ª—É—á—à–µ.")# –¥–ª—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –ø–∏—à–∏–º –≤ –ª–æ–≥ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏...
        #bot.send_message(chat_id=943180118, text=f"{str(name)} –õ–∞–π–∫–æ–≤ –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π –Ω–µ—Ç‚òπÔ∏è. –ó–∞–≤—Ç—Ä–∞ –ø–æ—Å—Ç–∞—Ä–∞–π—Å—è –ª—É—á—à–µ.")# –¥–ª—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –ø–∏—à–∏–º –≤ –ª–æ–≥ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏...
        bot.send_message(chat_id=int(info.loc[0, "user_id"]),text="–õ–∞–π–∫–æ–≤ –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π –Ω–µ—Ç ‚òπÔ∏è. –ó–∞–≤—Ç—Ä–∞ –ø–æ—Å—Ç–∞—Ä–∞–π—Å—è –ª—É—á—à–µ.")
        engine.execute(f"UPDATE user_family SET sum_day_null = 0 WHERE name ='{name}'")

    elif like_day == 0 and int(info.loc[0, "sum_day_null"]) != 3: #–ï—Å–ª–∏ –ª–∞–π–∫–æ–≤ –∑–∞ –¥–µ–Ω—å 0 –∏ –Ω–∞ —Å—á–µ—Ç—á–∏–∫–µ 3–¥–Ω–µ–π –Ω–µ = 3, —Ç–æ –ø—Ä–∏–±–∞–≤–ª—è–µ–º –∫ —Å—á–µ—Ç—á–∏–∫—É +1
        engine.execute(f"UPDATE user_family SET sum_day_null = {int(info.loc[0, 'sum_day_null']) + 1} WHERE name ='{name}'")
    ########    LIKE    ########
    statistics_book(name, True, False)
    text = "–ó–∞–≤—Ç—Ä–∞ —É —Ç–µ–±—è –≤ –≥—Ä–∞—Ñ–∏–∫–µ —Ç–∞–∫–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏:\n" +str(tomorrow(data_kids[name])) +"\n –†–∞—Å—Ö–æ–¥—É–π –≤—Ä–µ–º—è —Å –ø–æ–ª—å–∑–æ–π!üôÇ"
    #bot.send_message(chat_id=943180118,text=text)  # –¥–ª—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –ø–∏—à–∏–º –≤ –ª–æ–≥ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏...
    logging.info(text)  # –¥–ª—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –ø–∏—à–∏–º –≤ –ª–æ–≥ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏...
    bot.send_message(chat_id=int(info.loc[0, "user_id"]), text=text)

def statistics_book(name, flag, zero):
    book = pd.read_sql(f"SELECT * FROM books WHERE name ='{name}';",engine)
    summa = 0.0
    for num_book in range(len(book)):
        new_page = int(book.loc[num_book, "new_page"])
        old_page = int(book.loc[num_book, "old_page"])
        all_page = int(book.loc[num_book, "all_page"])
        every_day_page = int(book.loc[num_book, "every_day_page"])
        id_book = book.loc[num_book, "id"]
        if new_page != 0 and old_page <= new_page:
            norma = ((new_page - old_page) * 100) / every_day_page
            logging.info(f"{name}: norma = " + str(norma) + "%")
            summa += norma
            if zero:
                engine.execute(f"UPDATE books SET old_page = {new_page}, new_page = 0 WHERE id = {id_book};")
                engine.execute(f"UPDATE user_family SET dislike_book = 0 WHERE name ='{name}';")
                logging.info(f"{name} –æ–±–Ω—É–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ id = {id_book}")
            if all_page == new_page:
                engine.execute(f"UPDATE books SET name = '–ü—Ä–æ—á–∏—Ç–∞–Ω–æ({name})' WHERE id = '{id_book}';")  #
    logging.info(f"{name}: summa = " + str(summa) + "%")
    if flag:
        if summa <= 99.99 and summa > 0.0:
            bot.send_message(chat_id=int(book.loc[0, "user_id"]), text=f"–°–µ–≥–æ–¥–Ω—è –ø—Ä–æ—á–∏—Ç–∞–Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü, –ø—Ä–æ—á—Ç–∏ –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ. (–û—Å—Ç–∞–ª–æ—Å—å {100 - int(summa + (0.5 if summa > 0 else -0.5))}%)")
            logging.info(f"{name} –°–µ–≥–æ–¥–Ω—è –ø—Ä–æ—á–∏—Ç–∞–Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü, –ø—Ä–æ—á—Ç–∏ –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ. (–û—Å—Ç–∞–ª–æ—Å—å {100 - int(summa + (0.5 if summa > 0 else -0.5))}%)")
        elif summa == 0.0:
            bot.send_message(chat_id=int(book.loc[0, "user_id"]), text="–ù–∞–¥–æ –ø–æ—á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É! –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –±—É–¥–µ—Ç –¥–∏–∑–ª–∞–π–∫.")
            logging.info(f"{name} –ù–∞–¥–æ –ø–æ—á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É! –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –±—É–¥–µ—Ç –¥–∏–∑–ª–∞–π–∫.")
    else:
        if summa <= 99.99 and summa > -1.0:
            dislike = antimark(name)
            text = f"–ü—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ {int(summa + (0.5 if summa > 0 else -0.5))}% –æ—Ç –Ω–æ—Ä–º—ã –∑–∞ –¥–µ–Ω—å. +{dislike}üëé"
            logging.info(str(text))
            if name != "–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω":
                bot.send_message(chat_id=papa, text=name+": "+text)
                bot.send_message(chat_id=mama, text=name+": "+text)
            bot.send_message(chat_id=int(book.loc[0, "user_id"]), text=text)

def antimark(name_kid):
    info = pd.read_sql_query(f"SELECT mark, every_day, star, antimark, anti_every_day, poo, user_id,dislike_book FROM user_family WHERE name = '{name_kid}';",engine)
    dislike = int(info.loc[0, 'dislike_book'])
    if dislike != 0:
        dislike = dislike * 2
    else:
        dislike = 1
    new_antimark = dislike * 2
    antimark = int(info.loc[0, 'antimark']) + dislike
    anti_every_day = int(info.loc[0, 'anti_every_day']) + dislike
    poo = int(info.loc[0, 'poo'])
    mark = int(info.loc[0, 'mark'])
    every_day = int(info.loc[0, 'every_day'])
    star = int(info.loc[0, 'star'])
    if mark >= new_antimark:
        mark -= new_antimark
    elif star != 0:
        star -= 1
        mark = mark + 100 - new_antimark
    else:
        mark = 0
    if every_day >= new_antimark:
        every_day -= new_antimark
    else:
        every_day = 0
    if antimark >= 50:
        antimark -= 50
        poo += 1
    engine.execute(f"UPDATE user_family SET mark = {mark}, every_day = {every_day}, star = {star}, antimark = {antimark}, anti_every_day = {anti_every_day}, poo = {poo}, dislike_book = {dislike} WHERE name = '{name_kid}';")
    logging.info(f"{name_kid}: antimark = {dislike}")
    return dislike

def new_month(name):
    info = pd.read_sql(f"SELECT mark, antimark, star, poo, iq, brain, books_end FROM user_family WHERE name = '{name}'",engine)
    month = int(datetime.now().strftime('%m')) - 1
    year = int(datetime.now().strftime('%Y'))
    if month == 0:
        month = 12
        year -= 1
    engine.execute(f"INSERT INTO statistics(name, month, year, mark, antimark, star, poo, iq, brain, books_end) VALUES('{name}','{month}','{year}','{info.loc[0,'mark']}','{info.loc[0,'antimark']}','{info.loc[0,'star']}','{info.loc[0,'poo']}','{info.loc[0,'iq']}','{info.loc[0,'brain']}','{info.loc[0,'books_end']}');")
    engine.execute(f"UPDATE user_family SET star = 0, antimark = 0, anti_every_day = 0, poo = 0, brain = 0, books_end = 0  WHERE name = '{name}';")
    logging.info(f"new_month({name})")
def place():
    month = int(datetime.now().strftime('%m')) - 1
    year = int(datetime.now().strftime('%Y'))
    if month == 0:
        month = 12
        year -= 1
    info = pd.read_sql(f"SELECT name, mark, star, brain, iq FROM statistics WHERE month = '{month}' and year = '{year}';",engine)
    statistic = {}
    for i in range(len(info)):
        like = int(info.loc[i, "mark"])
        star = int(info.loc[i, "star"])
        brain = int(info.loc[i, "brain"])
        iq = int(info.loc[i, "iq"])
        result = (like+(star*100))+((brain*25)+(iq/2))
        statistic[info.loc[i, "name"]] = {
            "like": str(like),
            "result": result,
            "star": str(star),
            "place": 0
        }
    logging.info(f"Next function number place():")
    ########### –°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ####################
    ########### –í—ã—è–≤–ª–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∏ —Ä–∞—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–æ –º–µ—Å—Ç–∞–º ####################
    k = 0
    for j in range(len(info)):
        xyz = []
        for i in range(len(info)):
            if statistic[info.loc[i, "name"]]["place"] == 0:
                xyz += [[statistic[info.loc[i, "name"]]["result"], info.loc[i, "name"]]]
        k += 1
        statistic[max(xyz)[1]]["place"] = k
        engine.execute(f"UPDATE statistics SET place = {k} WHERE name = '{max(xyz)[1]}';")
        logging.info(f"place = {k}, name = '{max(xyz)[1]}'")
    ########### –í—ã—è–≤–ª–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∏ —Ä–∞—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–æ –º–µ—Å—Ç–∞–º ####################

########### –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–∞—Å–∞ –∑–∞–¥–∞–Ω–∏–π –≤ 7.00 –∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –∫–∏–¥–∞–µ–º –¥–∏–∑–ª–∞–π–∫–∏ ####################
def list_case_null(name_kid):
    info = pd.read_sql(f"SELECT id FROM list_case WHERE name = {name_kid}",engine)
    dislike = 0
    if len(info) != 0:
        for i in range(len(info)):
            engine.execute(f"UPDATE list_case SET name = '0' WHERE id = '{info.loc[i,'id']}';")
            dislike += 10
    if dislike != 0:
        info = pd.read_sql_query(f"SELECT mark, every_day, star, antimark, anti_every_day, poo, user_id FROM user_family WHERE name = '{name_kid}';",engine)
        new_antimark = dislike * 2
        antimark = int(info.loc[0, 'antimark']) + dislike
        anti_every_day = int(info.loc[0, 'anti_every_day']) + dislike
        poo = int(info.loc[0, 'poo'])
        mark = int(info.loc[0, 'mark'])
        every_day = int(info.loc[0, 'every_day'])
        star = int(info.loc[0, 'star'])
        if mark >= new_antimark:
            mark -= new_antimark
        elif star != 0:
            star -= 1
            mark = mark + 100 - new_antimark
        else:
            mark = 0
        if every_day >= new_antimark:
            every_day -= new_antimark
        else:
            every_day = 0
        if antimark >= 50:
            antimark -= 50
            poo += 1
        engine.execute(f"UPDATE user_family SET mark = {mark}, every_day = {every_day}, star = {star}, antimark = {antimark}, anti_every_day = {anti_every_day}, poo = {poo} WHERE name = '{name_kid}';")
        logging.info(f"{name_kid}: –∑–∞ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ {dislike}üëé.")
        bot.send_message(chat_id=int(info.loc[0, 'user_id']), text=f"–ú–Ω–µ –æ—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ –∑–∞ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ, –ø—Ä–∏—à–ª–æ—Å—å —Ç–µ–±–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å {dislike}üëé.\n–í–æ–∑—å–º–∏ –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ, –≤—ã–ø–æ–ª–Ω—è–π –∏ –Ω–µ –∑–∞–±—ã–≤–∞–π –∑–∞–∫—Ä—ã–≤–∞—Ç—å —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å üëç!")
        bot.send_message(chat_id=papa,text=f"{name_kid}: –∑–∞ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ {dislike}üëé.")
        bot.send_message(chat_id=mama,text=f"{name_kid}: –∑–∞ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ {dislike}üëé.")

vkl = True
sleepTime = 1

while True:
    time = datetime.now().strftime('%H:%M:00')  # –í—Ä–µ–º—è –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–µ –≤ –Ω—É–∂–Ω—ã–π –Ω–∞–º –≤–∏–¥
    day = datetime.now().strftime('%d') #–∫–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å?
    minute = datetime.now().minute
    stopwatch1 = datetime.now()
    time1h = datetime.strptime(time, "%H:%M:%S") - datetime.strptime("01:00:00", "%H:%M:%S")  # -1 —á–≤—Å
    time2h = datetime.strptime(time, "%H:%M:%S") - datetime.strptime("02:00:00", "%H:%M:%S")  # -1 —á–≤—Å
    if minute%5 == 0:
        for name in kids:
            if name != "–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω":
                ########    –í—Ä–µ–º—è –ø–æ—Å–ª–µ 04.00    ########
                if str(time) == "04:00:00" or vkl:
                    t = Thread(target=collect_info, args=(name,))  # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                    t.start()
                if vkl:
                    t.join()
                    #bot.send_message(chat_id=943180118, text=name+" - –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
                    logging.info(name+" - –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
                # try:
                #     if name in time_begin_and_end:
                #         if str(time_begin_and_end[name]['begin']) == str(time):
                #             Thread(target=begin,
                #                    args=(name, time_begin_and_end[name]['zan'],)).start()  # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                #         elif str(time_begin_and_end[name]['start'][0]) == str(time):
                #             Thread(target=start, args=(name,)).start()  # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                #         elif str(time_begin_and_end[name]['end'][0]) == str(time) or str(
                #                 time_begin_and_end[name]['end'][0]) == str(time1h) or str(
                #                 time_begin_and_end[name]['end'][0]) == str(time2h):
                #             key = 999
                #             if str(time_begin_and_end[name]['end'][0]) == str(time):
                #                 key = 0
                #             elif str(time_begin_and_end[name]['end'][0]) == str(time1h) or str(
                #                     time_begin_and_end[name]['end'][0]) == str(time2h):
                #                 key = 1
                #             Thread(target=end, args=(name, key,)).start()  # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                # except Exception as err:
                #     bot.send_message(chat_id=943180118, text=f"Error {str(time)} Begin-End ({name})\n{str(err)}")
                #     logging.info(f"Error {str(time)} Begin-End ({name})\n{str(err)}")
                if int(day) == 1 and str(time) == "07:05:00":
                    new_month(name)
                    bot.send_message(chat_id=943180118, text="new month " + name)
                    
        ########    –í—Ä–µ–º—è –ø–æ—Å–ª–µ 07.00    ########
            if str(time) == "07:00:00":
                Thread(target=statistics_book,args=(name, False, True,)).start() # –ü—Ä–æ–≤–µ—Ä—è–µ–º,–∫–Ω–∏–≥–∏ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω—É–ª—è–µ–º –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –°–ú–°
                Thread(target=list_case_null, args=(name, False, True,)).start()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –¥–µ–ª—è—Ö –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω—É–ª—è–µ–º, —Å—Ç–∞–≤–∏–º –¥–∏–∑–ª–∞–π–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –°–ú–°
            ########    –í—Ä–µ–º—è –ø–æ—Å–ª–µ 21.00    ########
            if str(time) == "21:00:00":
                Thread(target=nine_pm,args=(name,)).start()# –ú–µ–≥–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ
        vkl = False
        ########    –í—Ä–µ–º—è –ø–æ—Å–ª–µ 07.00    ########
        if str(time) == "07:00:00":
            #bot.send_message(chat_id=943180118,text="7:00 —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∏–ª\n +str(time_begin_and_end) –∑–∞ 4:00 = \n"+str(time_begin_and_end))
            logging.info("7:00 —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∏–ª\n +str(time_begin_and_end) –∑–∞ 4:00 = \n"+str(time_begin_and_end))
        ########    –í—Ä–µ–º—è –ø–æ—Å–ª–µ 21.00    ########
        if str(time) == "21:00:00":
            #bot.send_message(chat_id=943180118,text="21:00 —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∏–ª")
            logging.info("21:00 —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∏–ª")
        if int(day) == 1 and str(time) == "07:05:00":
            place()
            bot.send_message(chat_id=943180118, text="...new month, old place...")
    else:
        if sleepTime == 300:
            sleepTime = 60
            bot.send_message(chat_id=943180118, text="—Å–±–æ–π –ø–æ –≤—Ä–µ–º–µ–Ω–∏ sleepTime == 300 ==> 60" + str(time))
            logging.info("—Å–±–æ–π –ø–æ –≤—Ä–µ–º–µ–Ω–∏ sleepTime == 300 ==> 60" + str(time))
########    –û—Ç–¥–µ–ª —Å–Ω–∞. –í—ã—Ä–∞–≤–Ω–∏–≤–∞—é—â–∏–π –º–∏–Ω—É—Ç—ã –∏ —Å–µ–∫—É–Ω–¥—ã —á—Ç–æ–±—ã –≤ –∏—Ç–æ–≥–µ —Å–ø–∞—Ç—å –ø–æ 5–º–∏–Ω.    ########
    if sleepTime == 300:
        stopwatch2 = datetime.now()
        stopwatch = stopwatch2 - stopwatch1
        sleep(sleepTime - float(str(stopwatch).split(":")[2]))
    elif sleepTime == 60:
        if minute%5 == 0:
            sleepTime = 300
        stopwatch2 = datetime.now()
        stopwatch = stopwatch2 - stopwatch1
        sleep(sleepTime - float(str(stopwatch).split(":")[2]))

    else:
        sleep(sleepTime)
        if int(datetime.now().strftime("%S")) == 0:
            sleepTime = 60
        elif int(datetime.now().strftime("%S")) == 5:
            sleepTime = 5
        elif int(datetime.now().strftime("%S")) == 15:
            sleepTime = 15
        elif int(datetime.now().strftime("%S")) == 30:
            sleepTime = 30